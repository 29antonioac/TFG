\chapter{Desarrollo}

<<setup05, cache = FALSE, include = FALSE>>=
read_chunk("../scripts/05_Desarrollo.R")
@

Este trabajo ha sido desarrollando utilizando las siguientes herramientas:

\begin{itemize}
  \item \LaTeX \, como procesador de textos científico.
  \item \emph{R} como lenguaje de tratamiento de datos. Junto a \emph{knitr},
  se ha escrito este documento con el paradigma de \emph{programación literaria},
  donde el documento y los programas están en simbiosis, ofreciendo comodidad
  tanto para escribir como para leer.
  \item MariaDB como sistema gestor de bases de datos relacionales (SQL).
\end{itemize}

Estas decisiones se han tomado, principalmente, por ser las mejores herramientas
en cada uno de sus ámbitos, con la grandísima ventaja de ser software libre.

Además, la plataforma donde se ha realizado la computación, es la siguiente:
\begin{itemize}
  \item Sistema operativo GNU/Linux - Archlinux x86\_64
  \item Intel i7 6700K @ 4.2Ghz
  \item G.Skill Ripjaws V DDR4 2400Mhz 4x8GB
  \item eVGA GTX 960 4GB ACX2.0+
  \item 2x128GB SSD + 2x750GB HDD en RAID0 vía hardware
\end{itemize}

La decisión de usar un RAID0 es por la falta de discos para formar un sistema
con redundancia. Con este sistema tenemos un sistema rápido y de gran capacidad,
para albergar las grandes bases de datos que se precisan, aunque sin tolerancia
a fallos. Al ser vía hardware, la tasa de fallo es mucho menor que uno vía
software, por lo que en un entorno doméstico es suficiente.


\section{Matemáticas}
<<mates, child='05_Desarrollo_Matematicas.Rnw'>>=
@


\newpage
\section{Ingeniería Informática}
\label{sec:informatica}
Una vez se dispone de todas las herramientas matemáticas necesarias,
se puede comenzar con el desarrollo de la parte de Ingeniería Informática que
se aborda en el trabajo.

\subsection{Comprensión del problema y de los datos}
\label{subsec:comprension}

En primer lugar en cualquier problema de Ciencia de Datos, el primer
paso es \emph{comprender el problema y los datos que se disponen}.

%meter cita
El problema a abordar es el siguiente: a partir de un conjunto de
partidas antiguas de StarCraft, se busca predecir
el momento en el que la partida está decidida con una confianza
determinada. Para ello, partimos de 6 bases de datos relacionales
(SQL) con gran cantidad de partidas almacenadas, cada una con muchas
características a observar. Cada una de ellas posee las
características presentes en la figura~\ref{dataset}.


\begin{figure}
    \centering
    \includegraphics[width=\maxwidth]{figure/Robertson14DatabaseDiagram}
    \caption{Base de datos de partidas de StarCraft}
    \label{dataset}
\end{figure}



Una vez se tiene conocimiento del problema y un conjunto de datos, se
debe decidir qué datos y características van a ser usados y de qué
forma. El principal problema de este paso es conocer el conjunto de
datos del que se dispone, ya que usualmente no es extraído por los
investigadores.

Las características están sacadas casi en su totalidad directamente de
valores que proporciona la API que permite interactuar con StarCraft,
\emph{BWAPI}. Otros son datos derivados, como la distancia de un
jugador a la base más cercana, por ejemplo.

Las características que van a ser usados en este trabajo son,
principalmente, los recursos de cada jugador, sus batallones (que son
medidos de una manera determinada que se explican con más detalle más
adelante), sus construcciones, y los valores estimados de batallones y
contrucciones que tienen un jugador del otro. Además, también se tiene
en cuenta los recursos restantes del mapa que cada jugador estima que
quedan. Estas características quedan reflejadas en la figura
~\ref{datasetSeleccionado}.

\begin{figure}
    \centering
    \includegraphics[width=\maxwidth]{figure/Robertson14DatabaseDiagramSeleccion}
    \caption{Características seleccionadas de las bases de datos}
    \label{datasetSeleccionado}
\end{figure}


Estas características son, según cada tabla:

\begin{itemize}
  \item replay: Esta tabla contiene datos asociados a cada partida.
  \begin{itemize}
    \item ReplayID: Identificador de cada partida.
    \item Duration: Duración (en frames) de cada partida. 15 frames equivalen a 1 segundo.
  \end{itemize}
  \item playerreplay: Esta tabla contiene datos asociados a un jugador en una partida.
  \begin{itemize}
    \item PlayerReplayID: Identificador de un jugador en una partida.
    \item ReplayID: Identificador de partida asociado.
    \item Winner: Ganador de cada partida.
  \end{itemize}
  \item resourcechange: Esta tabla contiene datos asociados a cambios en los recursos de un jugador.
  \begin{itemize}
    \item PlayerReplayID: Identificador del jugador que produce un cambio.
    \item Frame: Frame en el que se produce un cambio.
    \item Minerals: Cantidad de minerales que tiene un jugador en ese momento.
    \item Gas: Cantidad de gas que tiene un jugador en ese momento.
    \item Supply: Capacidad de carga del jugador.
    \item TotalMinerals: Cantidad total de minerales que ha obtenido un jugador, sin contar gastos.
    \item TotalGas: Cantidad total de gas que ha obtenido un jugador, sin contar gastos.
    \item TotalSupply: Capacidad que ha obtenido un jugador, sin contar gastos.
  \end{itemize}
  \item regionvaluechange: Esta tabla contiene datos asociados a cambios de un jugador
  en una región del mapa determinada. Cada \emph{value}, que llamaremos de aquí en adelante
  \emph{valor}, es la suma del precio de una unidad en Minerales y Gas.
  \begin{itemize}
    \item PlayerReplayID: Identificador del jugador que produce un cambio.
    \item RegionID: Identificador de la región del mapa donde se produce un cambio.
    \item Frame: Frame en el que se produce el cambio.
    \item GroundUnitValue: Valor de las unidades terrestres en esta región.
    \item BuildingValue: Valor de las construcciones en esta región.
    \item AirUnitValue: Valor de las unidades aéreas en esta región.
    \item EnemyGroundUnitValue: Valor de las unidades terrestres del enemigo en esta región.
    Este valor es estimado, sólo se conoce lo que el jugador puede ver del enemigo.
    \item EnemyBuildingValue: Valor de las contrucciones del enemigo en esta región.
    Este valor es estimado, sólo se conoce lo que el jugador puede ver del enemigo.
    \item EnemyAirUnitValue: Valor de las unidades aéreas del enemigo en esta región.
    Este valor es estimado, sólo se conoce lo que el jugador puede ver del enemigo.
    \item ResourceValue: Valor de los recursos en esta región. Este valor es estimado,
    sólo se conoce lo que el jugador puede ver del mapa. Si el jugador no conoce una zona, estima que los recursos restantes es la totalidad de lo disponible en la región.
  \end{itemize}
\end{itemize}

Una vez se ha decidido qué vamos a usar, hay que pasar al cómo. Esta fase es el \emph{preprocesamiento de los datos}, que es la fase donde se organizan los datos, se corrigen si hubiera datos perdidos o ruido... para poder abordar el problema a resolver.

\subsection{Preprocesamiento de datos}
\label{subsec:preprocesamiento}

% Aquí metemos toda la jerga que he tenido que liar para
% sacar los datos de la base de datos. Sin código.

Aquí meter toda la lógica que se ha usado para extraer los datos. Qué y cómo se ha hecho.

\subsubsection{Análisis exploratorio de datos}
\label{subsubsec:exploratorio}

% Aquí todo lo referente al análisis exploratorio de datos

Lectura de datos

% <<readData>>=
% @

Histograma

% <<histograma>>=
% ggplot(data=metadata) +
% geom_bar(aes(x=ReplayID,y=Duration,fill=Duration), stat="identity") +
% geom_hline(yintercept = mean(metadata$Duration))
% print(mean(metadata$Duration))
% @
